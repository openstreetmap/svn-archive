<project name="OSMLabelOptimizer" default="compile" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="libs" location="libs" />
  <property name="dist_libs" location="${dist}/libs" />
  <property name="docs" location="docs" />
  <property name="javadoc" location="${docs}/javadoc" />
  <path id="classpath">
  	<fileset dir="${libs}">
  		<include name="*.jar"/>
  	</fileset>
  </path>


  <target name="init">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="javadoc" description="generate javadoc">
	  <mkdir dir="${javadoc}"/>
	  <javadoc sourcepath="${src}" destdir="${javadoc}">
		  <classpath refid="classpath"/>
  	  </javadoc>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist_libs}"/>
  	<copy todir="${dist_libs}">
  		<fileset dir="${libs}" />
  	</copy>
    <pathconvert property="cp" pathsep=" ">
      <path refid="classpath" />
      <chainedmapper>
        <flattenmapper/>
      	<globmapper from="*" to="libs/*"/>
      </chainedmapper>
    </pathconvert>

    <!-- Put everything in ${build} into the OSMLabelOptimizer.jar file -->
    <jar jarfile="${dist}/OSMLabelOptimizer.jar" basedir="${build}">
    	<manifest>
    		<attribute name="Main-Class" value="OSMLabelOptimizer"/>
    		<attribute name="Class-Path" value="${cp}"/>
 	    </manifest>
  	</jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>

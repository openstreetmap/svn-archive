# -*- coding: UTF8 -*-

'''
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
'''

import string
import time
import xml.etree.ElementTree as ET
from locationFinder import locationFinder

class KMLGenerator(object):
    '''
    Class to generate a KML overlay file
    '''
    
    def __init__(self):
        pass
    
    def render(self, locator ,PNGfilename, KMLfilename):
        '''
        render a KML file.
        pass 
        - an instance of a locationFinder subclass
        - the PNG filename (generated by heatmap PNG generator)
        - a filename to save the KML to
        '''
        self.setup()
        names=locator.getNames()
        x=locator.getX()
        y=locator.getY()
        z=locator.getZ()
        num=len(x)
        for ix in range(0,num):
            self.addPinpoint(names[ix], y[ix], x[ix], z[ix])
        w,s,e,n=locator.getBounds()
        self.addOverlay(PNGfilename, "title", (n,s,e,w))
        self.createKML(KMLfilename)
    
    def setup(self):
        self.kml=ET.Element("kml", xmlns="http://www.opengis.net/kml/2.2")
        self.doc=ET.SubElement(self.kml, "Document")
        self.ptsfolder=ET.SubElement(self.doc, "Folder")
        ET.SubElement(self.ptsfolder,"name").text="Pinpoints"
        self.olfolder=ET.SubElement(self.doc, "Folder")
        ET.SubElement(self.olfolder, "name").text="Heatmap"
        
    def addPinpoint(self,name,lat,lon,count):
        place=ET.SubElement(self.ptsfolder, "Placemark")
        namenode=ET.SubElement(place, "name")
        namenode.text=name
        desc=ET.SubElement(place, "description")
        desc.text="%s - %d photos" % (name,count)
        point=ET.SubElement(place, "Point")
        coords=ET.SubElement(point, "coordinates")
        coords.text="%.6f,%.6f,0.0" % (lon,lat)

    def addOverlay(self,filename,url,coords):
        _n,_s,_e,_w = coords
        self.overlay = ET.SubElement(self.olfolder, "GroundOverlay")
        self.name=ET.SubElement(self.overlay, "name")
        self.name.text="Most-photographed heatmap"
        self.desc=ET.SubElement(self.overlay, "description")
        self.desc.text="Flickr most photographed areas heatmap for URL %s" % url
        self.icon=ET.SubElement(self.overlay, "Icon")
        self.href=ET.SubElement(self.icon, "href")
        self.href.text=filename
        self.bbox=ET.SubElement(self.overlay, "LatLonBox")
        self.n=ET.SubElement(self.bbox, "north")
        self.n.text=str(_n)
        self.s=ET.SubElement(self.bbox, "south")
        self.s.text=str(_s)
        self.e=ET.SubElement(self.bbox, "east")
        self.e.text=str(_e)
        self.w=ET.SubElement(self.bbox, "west")
        self.w.text=str(_w)
        
    def createKML(self,outfilename):
        tree = ET.ElementTree(self.kml)
        tree.write(outfilename)
        print "Written KML to %s" % outfilename
    
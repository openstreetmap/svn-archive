# This is a start for an (almost) cut'n past installation description for mapnik-osm-renderer

# ------ Install some stuff
  sudo apt-get install \
                build-essential libfreetype6-dev libltdl3-dev \
                libpng12-dev  libtiff4-dev libboost-thread-dev\
                libboost-filesystem-dev \
                libboost-serialization-dev libboost-regex-dev\
                libboost-python-dev  proj python-imaging scons \
                libboost-program-options-dev postgresql-doc-8.2 \
                postgresql-8.2 postgresql-8.2-plruby \
                postgresql-client-8.2 postgresql-contrib-8.2\
                postgresql-plperl-8.2 postgresql-plpython-8.2 \
                postgresql-server-dev-8.2 postgresql-8.2-postgis \
                libboost-python-dev python2.4-dev \
                libwww-perl libxml-parser-perl libfile-slurp-perl \
		libgeos-dev

# ---- get software from OSM-SVN and compile
  cd
  svn co http://svn.openstreetmap.org/
  # compile osmsql
  (cd ~/svn.openstreetmap.org/applications/utils/export/osm2pgsql/; make)

 # ------- Get World Boundaries
 # Download is (600MB)
 # unpacking is an additional 1.2GB
 wget http://artem.dev.openstreetmap.org/files/world_boundaries.tar.bz2 -O /tmp/world_boundaries.tar.bz2
 sudo mkdir -p /usr/share/mapnik
 cd /usr/share/mapnik
 sudo tar -xvjf /tmp/world_boundaries.tar.bz2

# ----------- Create Database and Grant rights

  export user_name=`whoami`
  # or with a different user. 'steve' is the example user here ;-)
  export user_name="steve"
  sudo -u postgres createdb -Upostgres  -EUTF8 gis


# if you want to do it yourself ....
  sudo -u postgres createuser -Upostgres -S -D -R "$user_name"
  echo "GRANT ALL ON SCHEMA PUBLIC TO \"$user_name\";" | sudo -u postgres psql -Upostgres gis
  sudo -u postgres createlang plpgsql gis
  sudo -u postgres psql -Upostgres gis </usr/share/postgresql-8.2-postgis/lwpostgis.sql \
     2>&1 | grep -v -e 'FEHLER:  aktuelle Transaktion' \
     -e 'ERROR:  current transaction is aborted' \
     -e 'CREATE FUNCTION' -e OPERATOR
   echo "GRANT ALL on geometry_columns TO \"$user_name\";" | sudo -u postgres psql -Upostgres gis
  echo "GRANT ALL on spatial_ref_sys TO \"$user_name\";" | sudo -u postgres psql -Upostgres gis
  echo "GRANT ALL ON SCHEMA PUBLIC TO \"$user_name\";" | sudo -u postgres psql -Upostgres gis

 # else 
  wget http://www.gpsdrive.de/osm/mapnik-osm-gis.sql.gz -O \
          ~/osm/mapnik-osm-gis.sql.gz
  sed "s/tweety/$user_name/g" < ~/osm/mapnik-osm-gis.sql.gz | \
	  sudo -u postgres psql -Upostgres gis	 

# ---- Install and run planet-mirror --> planet.sql
  # Get newest planet.osm. This will takes some time
  ~/svn.openstreetmap.org/applications/utils/planet-mirror/planet-mirror.pl -v -v 

  ~/svn.openstreetmap.org/applications/utils/export/osm2pgsql/osm2pgsql ~/osm/planet/planet.osm.bz2
  # convert osm --> sql and import. takes about 45 minutes on a 2GHz (0.5GB-Ram) Machine
  #                                             23 minutes on a 3GHz (2 GB-Ram) Machine
  # Processing: Node(13090k)
  # Processing: Segment(13090k)
  # Processing: Way(882k)
  # Writing way(882k)

  # Test if you can read the Database
  echo "SELECT * from planet_osm_polygon LIMIT 2;" |  psql  gis -h /var/run/postgresql

# From here on the cut'n paste part stops
  cd ~/svn.openstreetmap.org/applications/rendering/mapnik/
  vi set-mapnik-env
  # edit all the stuff in there, see the comments in the file

  # read in the env variables you have just defined
  source set-mapnik-env

  # convert osm-template.xml to local osm.xml file
  ./customize-mapnik-map >$MAPNIK_MAP_FILE

  # create the directory that will hold the tiles
  mkdir -p $MAPNIK_TILE_DIR

#------------
# you can optionally change the bounding boxes and zoom levels you are
# interested in in generate_tiles.py and generate_image.py
#vi ~/svn.openstreetmap.org/applications/rendering/mapnik/generate_tiles.py
#    replace with your area
#    bbox = (-2, 50.0,1.0,52.0)
#------------


# ---------- And now, we start the rendering
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
export PYTHONPATH=/usr/lib/python2.5/site-packages:/usr/share/pycentral/python-mapnik/site-packages
python ~/svn.openstreetmap.org/applications/rendering/mapnik/generate_tiles.py

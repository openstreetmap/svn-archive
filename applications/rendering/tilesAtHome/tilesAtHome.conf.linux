#
# Config file for TilesAtHome 
#

### Environment:
## FileLocations
WorkingDirectory=/tmp/
Inkscape=inkscape
XmlStarlet=xmlstarlet
Niceness=nice -n10
Pngcrush=pngcrush
Subversion=svn

## the following parameter is mainly for windows compatibility. 
## if you don't know what it does, keep at 0.
7zipWin=0

## Workaround for inkscape internationalisation problems. Should be safe to keep on.
i18n=1

# Set the timeout when downloading files (in seconds)
DownloadTimeout=1800

# set this to prepend zip file by three first letters of hostname
# to allow identification of uploads from different machines in the 
# upload log
UseHostnameInZipname=0

## Upload settings
# UploadChunkSize is the maximum Zip size in MiB (1024^2 byte) for non-tileset uploads
UploadChunkSize=9   # Megabyte, hard limit 9.5 MiB (10 MB)

# UploadChunkCount is the maximum count of png files compressed in one zip
# 	if you don't suffer from posix command line limits, you can increase 
# 	this limit to arbitrary sizes. (keep in mind that some FS cannot 
# 	support more than a couple thousand files in a directory.
UploadChunkCount=13650  # default: 10 tilesets (will never be reached in practise)

# if set to 0 the zip files will get renamed to zip_uploaded after upload.
DeleteZipFilesAfterUpload=0

# set UploadToDirectory to 1 to enable uploading to a common upload 
# directory from which one central client can handle all the uploading
UploadToDirectory=0
UploadTargetDirectory=/set/this/to/your/upload/directory

# Upload configured layers only (used to be default behaviour of the client pre-r6978)
# new default is 0 to upload all zips from "uploadable"
UploadConfiguredLayersOnly=0

## Beziercurve hinting
NoBezier=0  # Set to 1 if beziercurvehinting causes errors.

#Upload layers when they are done? default: 0
# set to 1, if you want to upload layers as they are done, instead of waiting for all
# layers in the tileset to be rendered.
LayerUpload=0

#if a set is empty and RenderFullTileset = 0 only one tile is created
# set to 1 if the tile should be stored in workdir, so you can upload a bunch of them
# if set to 0 this tile will be uploaded as a set
GatherBlankTiles=0

# If set to 1, make a copy of the data file for later debugging purposes
KeepDataFile=0

# If set to 1, then Batik will be used for rendering instead of Inkscape
# If set to 2, then the Batik-wrapper will be used instead of Batik .jar file
# (adjust the path below accordingly)
Batik=0

# Set to the location of the batik rasterizer jar or the Batik wrapper (see
# Batik config parameter above) The Batik libraries should reside in the same
# folder, or in a sub-folder named lib.
BatikPath=/usr/share/batik-1.6/lib/batik-rasterizer.jar

# Set to the maximum JVM size to pass to the -Xmx parameter when running the
# rasterizer. The maximum size depends on the OS and the available memory.
# For 32bit Systems it is 1536M (1.5GiB)
# Only used for Batik jar
BatikJVMSize=1536M

# If set to 1 or greater, it will enable forking to render tiles
# Fork = 0   -> 1 process (normal behaviour)
# Fork = 1   -> 2 processes
# Fork = 2   -> 4 processes
# Fork = 3   -> 8 processes
Fork=0

# make the client upload in the background if set to 1
ForkForUpload=1

# Maxdepth for xmlstarlet, reduce if you run into problems with memory,
# increase if you get "tile too complex" errors.
XmlStarletMaxDepth=20000

# This feature is experimental and currently linux only. Don't use if you are
# using inkscape with the same username outside tiles@home. 
# Set to 1 if you want to t@h to try and autobackup and -restore your inkscape
# preferences file
AutoResetInkscapePrefs=0

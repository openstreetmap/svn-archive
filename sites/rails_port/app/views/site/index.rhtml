

<div id="geocoder">
  <%= start_form_tag :controller => 'geocoder', :action => 'search' %>
  <%= text_field 'query', 'postcode' %>
  <%= text_field 'query', 'place_name'%>
  <%= submit_tag 'Search' %>
  <%= end_form_tag %>

  <div id="geocoder-attribution">
    Geolocation provided by <a href="http://npemap.org.uk/">npemap.org.uk</a>,
    <a href="http://geocoder.us/">geocoder.us</a>, <a href="http://geocoder.ca/">geocoder.ca</a> and <a href="http://www.geonames.org/">geonames.org</a>
  </div>
  <div id="postcode-helper">
    Enter a postcode or zip code, eg: SW15 6JH, 95472 
  </div>
  <div id="placename-helper">
    Enter a place-name, eg:Essen
  </div>
</div>

<% if params['mlon'] and params['mlat'] %>
<% marker = true %>
<% mlon = params['mlon'] %> 
<% mlat = params['mlat'] %>
<% lon =  params['mlon'] %>
<% lat =  params['mlat']  %>
<% zoom =  params['zoom'] || '12' %>
<script type="text/javascript">
  var mlat = <%= lat %>;
  var mlon = <%= lon %>;
</script>
<% elsif @user and params['lon'].nil? and params['lat'].nil? %> 
<% lon =  @user.home_lon %>
<% lat =  @user.home_lat %>
<% zoom = '10' %>
<%else%>
<% lon =  params['lon'] || '-0.1' %>
<% lat =  params['lat'] || '51.5' %>
<% zoom =  params['zoom'] || '4' %>
<% end %>



<script type="text/javascript">
  var lat = <%= lat %>;
  var lon = <%= lon %>;
  var zoom = <%= zoom %>;
  var PI = 3.14159265358979323846;



  <% if params['scale'] and params['scale'].length > 0 then %>
  zoom = Math.log(360.0/(( <% print params['scale'].to_f() %> ) * 512.0)) / Math.log(2.0);
  <% end %>
  zoom = zoom;
  lon = lon * 20037508.34 / 180;
  lat = Math.log(Math.tan( (90 + lat) * PI / 360)) / (PI / 180);
  lat = lat * 20037508.34 / 180;
  <% if marker %>
  mlon = mlon * 20037508.34 / 180;
  mlat = Math.log(Math.tan( (90 + mlat) * PI / 360)) / (PI / 180);
  mlat = mlat * 20037508.34 / 180;
  <%end%>

</script>
<script type="text/javascript" src="/javascripts/OpenLayers.js"></script>

<script type="text/javascript">
  <!--
  var map, layer, markers;
  var ie6 = ! ( window.addEventListener || window.XMLHttpRequest );

  function init(){

    OpenLayers.Util.onImageLoadError = function() {
      this.src = "http://www.openstreetmap.org/javascripts/img/404.png";
    }
    map = new OpenLayers.Map( "map", 
        {maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34), maxZoomLevel:18, maxResolution:156543, units:'meters', projection: "EPSG:41001"} );
    layer = new OpenLayers.Layer.LikeGoogle( "Mapnik", "http://tile.openstreetmap.org/", {type:'png'} );
    map.addLayer(layer);
    layer = new OpenLayers.Layer.LikeGoogle( "Osmarender", "http://dev.openstreetmap.org/~ojw/Tiles/tile.php/", {type:'png'} );
    map.addLayer(layer);

    //Marker stuff

    <% if marker %>
    markers = new OpenLayers.Layer.Markers("markers");
    map.addLayer(markers); 

    marker = new OpenLayers.Marker(new OpenLayers.LonLat(mlon,mlat));
    markers.addMarker(marker);
    <%end%>

      map.addControl(new OpenLayers.Control.LayerSwitcher());
    map.setCenter(new OpenLayers.LonLat(lon, lat), zoom);

    map.events.register("moveend", map, function() { 
        var lonlat = map.getCenter();

        var lon_deg = (lonlat.lon / 20037508.34) * 180;
        var lat_deg = (lonlat.lat / 20037508.34) * 180;
        var PI = 3.14159265358979323846;
        lat_deg = 180/PI * (2 * Math.atan(Math.exp(lat_deg * PI / 180)) - PI / 2);
        var zoom = map.getZoom();
        updatelinks(lon_deg,lat_deg,zoom);
        });
    document.getElementById( 'map_OpenLayers_ViewPort' ).style.position = 'absolute';
    if( ie6 ) {
      handleResize();
    }
  }        

  function getStyle( el, property ) {
    var style;
    if( el.currentStyle ) {
        style = el.currentStyle[property];
    } else if( window.getComputedStyle ) {
        style = document.defaultView.getComputedStyle(el,null).getPropertyValue(property);
    } else {
        style = el.style[property];
    }
    return style;
  }
  
  function handleResize() {
    var el = document.getElementById( 'map' );
    var left = getStyle( el, 'left' );
    var top = getStyle( el, 'top' );
    var bottom = el.old_bottom;
    if( ! bottom ) {
      bottom = getStyle( el, 'bottom' );
    }
    var right = el.old_right;
    if( ! right ) {
        right = getStyle( el, 'right' );
    }
    var width = el.old_width;
    if( ! width ) {
        width = getStyle( el, 'width' );
    }
    var height = el.old_height;
    if( ! height ) {
        height = getStyle( el, 'height' );
    }
    var pwidth, pheight;
    if( el.offsetParent.nodeName == 'BODY' || el.offsetParent.nodeName == 'HTML' ) {
      if( typeof( window.innerWidth ) == 'number' ) {
          pwidth = window.innerWidth;
          height = window.innerHeight;
      } else if( document.documentElement &&
          ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {
          pwidth = document.documentElement.clientWidth;
          pheight = document.documentElement.clientHeight;
      } else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) ) {
          pwidth = document.body.clientWidth;
          pheight = document.body.clientHeight;
      }
    } else {
      pwidth = el.offsetParent.offsetWidth;
      pheight = el.offsetParent.offsetHeight;
    }
    if( left != 'auto' && right != 'auto' && width == 'auto' ) {
      el.old_width = width;
      var new_width = (pwidth - el.offsetLeft - parseInt( right ) );
      el.style.width = new_width + 'px';
    }
    if( top != 'auto' && bottom != 'auto' && height == 'auto' ) {
      el.old_height = height;
      var new_height = (pheight - el.offsetHeight - parseInt( bottom ) );
      el.style.height = new_height + 'px';
    }
  }

if( ie6 ) {
  window.onresize = handleResize;
}
window.onload = init;
// -->
</script>

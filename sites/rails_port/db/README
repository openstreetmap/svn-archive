Creating database
===================

OSM server uses a database with the following name:

openstreetmap

You may create it with your preferable client or run next (linux) command:

$ mysql -u <uid> -p

(change <uid> with appropriate username of administrative user eg. root )

> create database openstreetmap default character set utf8;
> exit

Creating user, password, and access rights
============================================

$ mysql -u <uid> -p

(change <uid> with appropriate username of administrative user eg. root )

> grant all privileges on openstreetmap.* to 'openstreetmap'@'localhost' identified by 'openstreetmap';
> flush privileges;
> exit

Creating functions
====================

Run this command in the db/functions directory:

$ make

The above command should work for linux and most other Unix systems
that use ELF shared objects. For MacOS X you will need to do:

$ make libquadtile.dylib

Make sure the db/functions directory is on the MySQL server's library
path and restart the MySQL server. On linux the easiest way to do this
is to create /etc/ld.so.conf.d/osm.conf and place the path to the
db/functions directory in it and then run the following command as root:

$ ldconfig

Now create the functions as follows:

$ mysql -u <uid> -p openstreetmap

(change <uid> with appropriate username of administrative user eg. root )

> create function tile_for_point returns integer soname 'libquadtile.so';
> exit

or, for MacOS X:

> create function tile_for_point returns integer soname 'libquadtile.dylib';
> exit

Creating database skeleton tables
===================================

Run this command from the root of your rails directory:

$ rake db:migrate

This will create the db for you
